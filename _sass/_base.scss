f/**
 * Reset some basic elements
 */
body, h1, h2, h3, h4, h5, h6,
p, blockquote, pre, hr,
dl, dd, ol, ul, figure {
    margin: 0;
    padding: 0;
}

::selection {
  background: $grayLight;
}
::-moz-selection {
  background: $grayLight;
}

/**
 * Utils
 */

.flex-aligner {
    display: -webkit-box;
    display: -moz-box;
    display: -ms-flexbox;
    display: -webkit-flex;
    display: flex; 
    align-items: center;
    -webkit-box-align: center;
    -webkit-align-items: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -webkit-justify-content: center;
    -ms-flex-pack: center;
    justify-content: center;
}

.flex-aligner-item {
    -webkit-box-flex: 1;
    -webkit-flex: 1;
    -moz-box-flex: 1; 
    -ms-flex: 1;
    flex: 1;
}

.flex-aligner-item--fixed {
    -webkit-box-flex: 0;
    -webkit-flex: none;
    -moz-box-flex: none;
    -ms-flex: none;
    flex: none;
}

@mixin clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

.icon {
    > svg {
        display: inline-block;
        width: 32px;
        height: 32px;
        vertical-align: middle;
        path {
            fill: $gray;
        }
    }
}

@mixin transition($transition-property, $transition-time, $method) {
    -webkit-transition: $transition-property $transition-time $method;
    -moz-transition: $transition-property $transition-time $method;
    -ms-transition: $transition-property $transition-time $method;
    -o-transition: $transition-property $transition-time $method;
    transition: $transition-property $transition-time $method;
}

@mixin transform($string) {
    -webkit-transform: $string;
    -moz-transform: $string;    
    -moz-transform: $string;
    -ms-transform: $string;
    -o-transform: $string;
}

@mixin animation($animate...) {
    $max: length($animate);
    $animations: '';

    @for $i from 1 through $max {
        $animations: #{$animations + nth($animate, $i)};

        @if $i < $max {
            $animations: #{$animations + ", "};
        }
    }
    -webkit-animation: $animations;
    -moz-animation:    $animations;
    -o-animation:      $animations;
    animation:         $animations;
}

@mixin keyframes($animationName) {
    @-webkit-keyframes #{$animationName} {
        @content;
    }
    @-moz-keyframes #{$animationName} {
        @content;
    }
    @-o-keyframes #{$animationName} {
        @content;
    }
    @keyframes #{$animationName} {
        @content;
    }
}

@include keyframes(bounce) {
    0%, 20%, 50%, 80%, 100% {
        @include transform(translateY(0));
    }
    40% {
        @include transform(translateY(-30px));
    }
    60% {
        @include transform(translateY(-15px));
    }
}

// Animations

@include keyframes(fadein) {
    0%   { opacity: 0; }
    100% { opacity: 1; }
}

.hidden {
    display: none !important;
    visibility: hidden;
}

.page-content {
    opacity: 0;
    @include transition(opacity, 1s, ease-in);
}

.page-content.load {
    opacity: 1;
}

/**
 * Basic styling
 */
body {
    font-family: $base-font-family-light;
    font-size: $base-font-size;
    letter-spacing: 1px;
    line-height: $base-line-height;
    color: $grayDark;
    background-color: $white;
    -webkit-text-size-adjust: 100%;
}

/**
 * Set `margin-bottom` to maintain vertical rhythm
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
ul, ol, dl, figure,
{
    margin-bottom: 0;
}

/**
 * Images
 */
img {
    display: block;
    max-width: 100%;
    vertical-align: middle;
}

/**
 * Figures
 */
figure > img {
    display: block;
}

figcaption {
    font-size: $small-font-size;
}



/**
 * Lists
 */
ul, ol {
    margin-left: 0;
    list-style-type: none;
}

li {
    > ul,
    > ol {
         margin-bottom: 0;
    }
}

/**
 * Links
 */
a {
    color: $blueLight;
    text-decoration: none;
    @include transition(all, 0.2s, linear);
    &:hover {
        color: darken($blueLight, 15%);
        text-decoration: none;
        @include transition(all, 0.2s, linear);
    }
}

/**
 * Blockquotes
 */
blockquote {
    color: $grayDark;
    border-left: 4px solid $grayLight;
    padding-left: $spacing-unit / 2;
    font-size: $large-font-size;
    letter-spacing: -1px;

    > :last-child {
        margin-bottom: 0;
    }
}



/**
 * Code formatting
 */
pre,
code {
    font-size: 15px;
    border: 1px solid $grayDark;
    border-radius: 3px;
    background-color: $gray;
}

code {
    padding: 1px 5px;
}

pre {
    padding: 8px 12px;
    overflow-x: scroll;

    > code {
        border: 0;
        padding-right: 0;
        padding-left: 0;
    }
}

/**
 * Horizontal Rule
 */

 hr {
    margin: $spacing-unit / 2 0;
    border: 1px $grayDark dashed;
 }

/**
 * Medida Queries
 */
@mixin media-query($device) {
    @media screen and (max-width: $device) {
        @content;
    }
}
